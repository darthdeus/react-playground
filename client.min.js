(function(d){function f(){function a(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return a()+a()+"-"+a()+"-"+a()+"-"+a()+"-"+a()+a()+a()}function c(a,b,c,e){if(!a)throw Error("API key is required.");this.f=null;this.a=this.b=!1;this.p=b;this.host=c;this.port=e;this.l=a;this.c={};this.d=[];this.e=[];return this}(d.catsocket={}).init=function(a,b,d,e){b=b||f();a=new c(a,b,d||"localhost",e||9E3);a.m();a.log("Trying to connect...");return a};c.prototype.log=function(){console.log.apply(console,
arguments)};c.prototype.m=function(){this.a=this.b=!1;var a=this.f=new WebSocket("ws://"+this.host+":"+this.port+"/api/ws");this.j(a)};c.prototype.j=function(a){a.onopen=function(){this.a=!0;this.send("identify",{})}.bind(this);a.onclose=function(){this.o?this.log("Socket was explicitly closed, not reconnecting."):setTimeout(function(){this.log("TODO - implement reconnect")}.bind(this),2E3)}.bind(this);a.onmessage=function(a){console.group("onmessage");this.log("<-",a);a=JSON.parse(a.data);switch(a.action){case "message":this.i(a);
break;case "ack":this.h(a);break;default:this.k(a)}console.groupEnd()}.bind(this)};c.prototype.send=function(a,b){this.g({api_key:this.l,user:this.p,id:f(),data:b,action:a,timestamp:(new Date).getTime()})};c.prototype.g=function(a){this.a&&(this.b||"identify"==a.action)?(this.log("->",a),this.e[a.id]=a,this.f.send(JSON.stringify(a))):(this.log("Pushing to queue",a),this.d.push(a))};c.prototype.n=function(){for(this.log("flushing queue");this.d.length;){var a=this.d.pop();this.g(a)}};c.prototype.i=
function(a){if(a.data.room){var b=this.c[a.data.room];"function"===typeof b?a.data.message?b.call(null,a.data.message):console.error("Missing message in `event.data.message`",a):this.log("Received message for which there is no handler",a)}else console.error("Invalid message, missing `event.data.room`",a)};c.prototype.h=function(a){var b=this.e[a.id];b?("identify"===b.action&&(this.b=!0,this.n()),this.log("ACK:",b.id,b),delete this.e[a.id]):console.error("Received ACK for message which wasn't sent",
a.id,a)};c.prototype.k=function(a){console.error("Unrecognized message type",a.action,"with data",a)};c.prototype.join=function(a,b){this.c[a]=b;this.send("join",{room:a})};c.prototype.leave=function(a){delete this.c[a];this.send("leave",{room:a})};c.prototype.broadcast=function(a,b){this.send("broadcast",{room:a,message:b})};c.prototype.close=function(){this.o=!0;this.b=this.a=!1;this.f.close();this.log("Socket closed...")}})(window);
